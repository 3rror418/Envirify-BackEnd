plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id "jacoco"
}

group = 'edu.eci.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
def files = unit.join(", ");

sonarqube {
	properties {
		property "sonar.projectKey", "3rror418_Envirify-BackEnd"
		property "sonar.organization", "3rror418"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.tests", "src/test"
		property "sonar.java.test.binaries", "build/classes/java/test"
		property "sonar.jacoco.reportPaths", files
		property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
		property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/edu/eci/ieti/envirify/model/**'])
		})
	}
}


